{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GK\\\\Desktop\\\\Projects123\\\\React\\\\TO-Dental-\\\\client\\\\src\\\\pages\\\\login.js\",\n  _s = $RefreshSig$();\n// import React hooks\nimport React, { useState } from \"react\";\n\n// importing CSS file for styling the login page\nimport \"./loginSignup.css\";\n\n// importing Axios library for making HTTP requests\nimport Axios from \"axios\";\n\n// importing hooks for navigating and linking within the app\nimport { useNavigate, Link } from \"react-router-dom\";\n\n// defining the Login component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  // hook for navigating within the app\n  const navigate = useNavigate();\n\n  // setting up state variables using useState hook\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginStatus, setLoginStatus] = useState(\"\");\n\n  // function for handling login submission\n  const login = e => {\n    // prevents default form submission behavior\n    e.preventDefault();\n\n    // sending a post request to the backend with the form data\n    Axios.post(\"http://localhost:3001/login\", {\n      email: email,\n      username: username,\n      password: password\n    }).then(response => {\n      // logging the response received from the backend\n      console.log(response);\n\n      // if there's an error message in the response, display it\n      if (response.data.message) {\n        setLoginStatus(response.data.message);\n\n        // otherwise, store user email in local storage and navigate to the dashboard\n      } else {\n        console.log(\"Navigating to user dashboard...\");\n        const email = response.data.email;\n\n        // store user email in localStorage\n        localStorage.setItem(\"userEmail\", email);\n\n        // check if email is stored in localStorage\n        if (localStorage.getItem(\"userEmail\") !== null) {\n          console.log(\"Email is stored in localStorage\");\n        } else {\n          console.log(\"Email is not stored in localStorage\");\n        }\n\n        // navigate to the dashboard\n        navigate(\"/dashboard\"); // navigate to the dashboard\n      }\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    // defines a class box\n    _jsxDEV(\"div\", {\n      className: \"box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginForm\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"textInput\",\n            type: \"email\",\n            name: \"email\"\n\n            // an event handler that is triggered when the value of the email input field is changed,\n            // the new value of the input field is obtained from the event object's target.value property, \n            // and it is passed to the setEmail function to update the email state.\n            ,\n            onChange: e => {\n              setEmail(e.target.value);\n            },\n            placeholder: \"Enter your Email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"textInput\",\n            type: \"username\",\n            name: \"username\"\n\n            // an event handler that is triggered when the value of the username input field is changed,\n            // the new value of the input field is obtained from the event object's target.value property, \n            // and it is passed to the setUsername function to update the email state.\n            ,\n            onChange: e => {\n              setUsername(e.target.value);\n            },\n            placeholder: \"Enter your Username\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"textInput\",\n            type: \"password\",\n            name: \"password\"\n\n            // an event handler that is triggered when the value of the password input field is changed,\n            // the new value of the input field is obtained from the event object's target.value property, \n            // and it is passed to the setPassword function to update the email state.\n            ,\n            onChange: e => {\n              setPassword(e.target.value);\n            },\n            placeholder: \"Enter your Password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"button\",\n            type: \"submit\",\n            onClick: login,\n            value: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/sign-up\",\n            activestyle: \"true\",\n            children: \"Create your T|O Dental account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              color: \"red\",\n              fontSize: \"15px\",\n              textAlign: \"center\",\n              marginTop: \"20px\"\n            },\n            children: loginStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n// exporting the Home component\n_s(Login, \"Wre21TRbMBwkZcWCSXYaCNfuI5M=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Axios","useNavigate","Link","Login","navigate","email","setEmail","username","setUsername","password","setPassword","loginStatus","setLoginStatus","login","e","preventDefault","post","then","response","console","log","data","message","localStorage","setItem","getItem","target","value","color","fontSize","textAlign","marginTop"],"sources":["C:/Users/GK/Desktop/Projects123/React/TO-Dental-/client/src/pages/login.js"],"sourcesContent":["// import React hooks\r\nimport React, { useState } from \"react\";\r\n\r\n// importing CSS file for styling the login page\r\nimport \"./loginSignup.css\";\r\n\r\n// importing Axios library for making HTTP requests\r\nimport Axios from \"axios\";\r\n\r\n// importing hooks for navigating and linking within the app\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n\r\n// defining the Login component\r\nfunction Login() {\r\n\r\n  // hook for navigating within the app\r\n  const navigate = useNavigate();\r\n\r\n  // setting up state variables using useState hook\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginStatus, setLoginStatus] = useState(\"\");\r\n\r\n  // function for handling login submission\r\n  const login = (e) => {\r\n\r\n    // prevents default form submission behavior\r\n    e.preventDefault();\r\n\r\n    // sending a post request to the backend with the form data\r\n    Axios.post(\"http://localhost:3001/login\", {\r\n      email: email,\r\n      username: username,\r\n      password: password,\r\n    }).then((response) => {\r\n\r\n      // logging the response received from the backend\r\n      console.log(response);\r\n\r\n      // if there's an error message in the response, display it\r\n      if (response.data.message) {\r\n        setLoginStatus(response.data.message);\r\n\r\n      // otherwise, store user email in local storage and navigate to the dashboard\r\n      } else {\r\n        console.log(\"Navigating to user dashboard...\");\r\n        const email = response.data.email;\r\n\r\n        // store user email in localStorage\r\n        localStorage.setItem(\"userEmail\", email); \r\n        \r\n        // check if email is stored in localStorage\r\n        if (localStorage.getItem(\"userEmail\") !== null) {\r\n          console.log(\"Email is stored in localStorage\");\r\n        } else {\r\n          console.log(\"Email is not stored in localStorage\");\r\n        }\r\n\r\n         // navigate to the dashboard\r\n        navigate(\"/dashboard\"); // navigate to the dashboard\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    \r\n    // defines a class box\r\n    <div className=\"box\">\r\n\r\n    {/* defines a class loginForm */}\r\n      <div className=\"loginForm\">\r\n        <form>\r\n          <h4>Sign in</h4>\r\n\r\n          {/* email Input Field */}\r\n          <label htmlFor=\"email\">Email*</label>\r\n          <input\r\n            className=\"textInput\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n\r\n            // an event handler that is triggered when the value of the email input field is changed,\r\n            // the new value of the input field is obtained from the event object's target.value property, \r\n            // and it is passed to the setEmail function to update the email state.\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n            }}\r\n            placeholder=\"Enter your Email\"\r\n            required\r\n          />\r\n\r\n          {/* Username Input Field */}\r\n          <label htmlFor=\"username\">Username*</label>\r\n          <input\r\n            className=\"textInput\"\r\n            type=\"username\"\r\n            name=\"username\"\r\n\r\n            // an event handler that is triggered when the value of the username input field is changed,\r\n            // the new value of the input field is obtained from the event object's target.value property, \r\n            // and it is passed to the setUsername function to update the email state.\r\n            onChange={(e) => {\r\n              setUsername(e.target.value);\r\n            }}\r\n            placeholder=\"Enter your Username\"\r\n            required\r\n          />\r\n\r\n          {/* Password Input Field */}\r\n          <label htmlFor=\"password\">Password*</label>\r\n          <input\r\n            className=\"textInput\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n\r\n            // an event handler that is triggered when the value of the password input field is changed,\r\n            // the new value of the input field is obtained from the event object's target.value property, \r\n            // and it is passed to the setPassword function to update the email state.\r\n            onChange={(e) => {\r\n              setPassword(e.target.value);\r\n            }}\r\n            placeholder=\"Enter your Password\"\r\n            required\r\n          />\r\n\r\n          {/* Login Button */}\r\n          <input\r\n            className=\"button\"\r\n            type=\"submit\"\r\n            onClick={login}\r\n            value=\"Login\"\r\n          />\r\n\r\n          {/* link to sign up page */}\r\n          <Link to=\"/sign-up\" activestyle=\"true\">\r\n            Create your T|O Dental account\r\n          </Link>\r\n\r\n          {/* error Message */}\r\n          <h1\r\n            style={{\r\n              color: \"red\",\r\n              fontSize: \"15px\",\r\n              textAlign: \"center\",\r\n              marginTop: \"20px\",\r\n            }}\r\n          >\r\n            {loginStatus}\r\n          </h1>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\n// exporting the Home component\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}